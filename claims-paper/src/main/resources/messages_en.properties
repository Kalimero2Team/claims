chunkborder.on=Chunk borders: <green>visible</green>
chunkborder.off=Chunk borders: <red>invisible</red>
chunk.info.info=<bold>Chunk Information</bold> [X: <chunk_x> | Z: <chunk_z>]:
chunk.info.claimed_true=Claimed: <bold><green>Yes</green></bold>
chunk.info.claimed_false=Claimed: <bold><red>No</red></bold>
chunk.info.owner=Owner: <bold><player></bold>
chunk.info.owner_group=Owner: <bold><group></bold> (Group)
chunk.info.trusted_player_header=Added Players:
chunk.info.trusted_player=<bold><player></bold>
chunk.info.trusted_group_header=Added Groups:
chunk.info.trusted_group=<bold><group></bold>
chunk.add.success=<green><bold><target></bold> can now build on this chunk.</green>
chunk.add.fail_already_added=<red><bold><target></bold> was already allowed to build on this chunk.</red>
chunk.remove.success=<green><bold><target></bold> can no longer build on this chunk.</green>
chunk.remove.fail_already_removed=<red><bold><target></bold> was already not allowed to build on this chunk.</red>
chunk.remove.fail_cannot_remove_owner=<red>The owner of this chunk cannot be removed. Use /chunk unclaim to unclaim the chunk.</red>
chunk.claim.success=<green>Chunk successfully claimed.</green>
chunk.claim.success_group=<green>Chunk successfully claimed for group <bold><group></bold>.</green>
chunk.claim.fail_already_claimed=<red>This chunk is already claimed.</red>
chunk.claim.fail_too_many_claims=<red>You have already claimed <bold><count></bold> of the maximum <bold><max_count></bold> chunks.</red>
chunk.claim.fail_world_not_claimable=<red>This world is not claimable.</red>
chunk.unclaim.success=<green>Chunk successfully unclaimed.</green>
chunk.unclaim.fail_not_claimed=<red>This chunk is not claimed.</red>
chunk.unclaim.fail_not_owner=<red>You are not the owner of this chunk.</red>
chunk.admin.force.true=<green>Force mode activated.</green>
chunk.admin.force.false=<green>Force mode deactivated.</green>
chunk.admin.set_owner=The owner is now <bold><target></bold>
chunk.admin.limit.add=<green><bold><target></bold> now has <bold><count></bold> instead of <bold><old_count></bold> claims</green>
chunk.admin.limit.set=<green><bold><target></bold> now has <bold><count></bold> instead of <bold><old_count></bold> claims</green>
chunk.admin.limit.get=<green><bold><target></bold> has <bold><count></bold> claims</green>
chunk.list.header=<bold>Your Chunks:</bold>
chunk.list.header_other=<bold>Chunks of <target>:</bold>
chunk.list.entry=<x> <z> (Chunk <chunk_x> <chunk_z>)
chunk.list.footer=Page <gray><page></gray> of <gray><max_page></gray> <bold><prev> <next></bold>
chunk.list.empty=<red>You have not claimed any chunks</red>
chunk.list.empty_other=<red><target> has not claimed any chunks</red>
chunk.list.tp_hover=Click to teleport
chunk.interactable.block.allow_material=<green>Interaction with <material> is now allowed</green>
chunk.interactable.block.deny_material=<green>Interaction with <material> is now prohibited</green>
chunk.interactable.block.removed_material=<green>The material <material> has been successfully removed</green>
chunk.interactable.block.fail_not_interactable=<red>The block must be interactable.</red>
chunk.interactable.block.fail_already_added=<red>The material <material> is already added</red>
chunk.interactable.block.fail_not_added=<red>The material <material> is not added</red>
chunk.interactable.entity.allow_both=<green>Other players can now interact with and damage entities of type <entity></green>
chunk.interactable.entity.allow_damage=<green>Other players can now damage entities of type <entity></green>
chunk.interactable.entity.allow_interact=<green>Other players can now interact with entities of type <entity></green>
chunk.interactable.entity.none=<green>Other players can no longer interact with and damage entities of type <entity></green>
chunk.interactable.entity.removed=<green>Entities of type <entity> have been successfully removed</green>
chunk.interactable.list.material_header=<bold>Interactive Blocks:</bold>
chunk.interactable.list.material_none_ignored=<bold>All blocks are at their default values</bold>
chunk.interactable.list.material_entry=<material> <bold>Interact:</bold> <state>
chunk.interactable.list.entity_header=<bold>Interactive Entities:</bold>
chunk.interactable.list.entity_none_ignored=<bold>All entities are at their default values</bold>
chunk.interactable.list.entity_entry=<entity> <bold>Damage:</bold> <damage> <bold>Interact:</bold> <interact>
chunk.flag.set_success=<green>Flag <flag> has been set to <state></green>
chunk.flag.unset_success=<green>Flag <flag> has been reset</green>
chunk.flag.list.entry=<flag>: <state>
chunk.flag.list.empty=<red>No flags set</red>
chunk.enter_message=<gray>Landowner: </gray><player>
chunk.enter_message_group=<gray>Landowner: </gray><group><gray> <italic>(Group)</italic></gray>
chunk.generic.fail_chunk_not_claimed=<red>This chunk is not claimed</red>
chunk.generic.fail_no_permission=<red>You do not have permission for this action</red>
chunk.generic.fail_not_owner=<red>You are not the owner of this chunk.</red>
group.create.success=<green>Group <name> has been created</green>
group.create.fail=<red>Group <name> already exists</red>
group.create.fail_too_many_groups=<red>You have already created <count> of the maximum <max_count> groups</red>
group.delete.success=<green>Group <name> has been deleted</green>
group.delete.fail=<red>Group <name> does not exist</red>
group.delete.fail_still_has_claims=<red>Group <name> still has Claims. Unclaim them first.</red>
group.rename.success=<green>Group <old_name> has been renamed to <new_name></green>
group.rename.fail=<red>Group <old_name> does not exist</red>
group.member.add.success=<green><player> has been added to <group></green>
group.member.add.fail=<red><player> is already in <group></red>
group.member.remove.success=<green><player> has been removed from <group></green>
group.member.remove.fail=<red><player> is not in <group></red>
group.member.remove.fail_to_remove_higher=<red>You cannot remove <player> from <group> because they have a higher rank than you</red>
group.member.remove.fail_to_remove_self=<red>You cannot remove yourself from <group></red>
group.member.list.header=<bold>Members of <group>:</bold>
group.member.list.entry=<player> <level>
group.member.promote.success=<green><player> has been promoted to <level></green>
group.member.promote.fail=<red><player> is already in the <level> group</red>
group.member.promote.fail_higher_level=<red>You cannot promote <player> to <level> because they have a higher or equivalent rank than you</red>
group.member.promote.fail_would_equal_or_exceed_own_level=<red>You cannot promote <player> to <level> because it matches or exceeds your own rank</red>
group.member.promote.fail_to_promote_self=<red>You cannot promote yourself</red>
group.member.demote.success=<green><player> has been demoted to <level></green>
group.member.demote.fail=<red><player> is already in the <level> group</red>
group.member.demote.fail_higher_level=<red>You cannot demote <player> to <level> because they have a higher or equivalent rank than you</red>
group.member.demote.fail_to_demote_self=<red>You cannot demote yourself</red>
group.broadcast.promoted=[<group>] <player> has been promoted to <level>
group.broadcast.demoted=[<group>] <player> has been demoted to <level>
group.broadcast.added=[<group>] <player> has been added to the group
group.broadcast.removed=[<group>] <player> has been removed from the group
group.claims.transfer.success=<green>You have transferred <amount> Claims to <group>. The group now has <new_amount> Claims.</green>
group.claims.transfer.fail_amount_required=<red>Transferring this quantity of <amount> is not possible.</red>
group.claims.transfer.fail_not_enough_claims=<red>You do not have enough Claims to transfer these.</red>
group.claims.transfer.fail_confirm_required=<red>Please confirm the transfer with <bold>/chunk group claims transfer <group> <amount> confirm</bold></red>
generic.enabled=<green>Enabled</green>
generic.disabled=<red>Disabled</red>
generic.allowed=<green>Allowed</green>
generic.denied=<red>Denied</red>